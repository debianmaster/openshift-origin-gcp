{#
Copyright 2017 BBVA. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#}

{% set API_VERSION = 'beta' if properties['gpu']|length > 0 else 'v1' %}

{#
  Gets name of addtional disks on instances
#}
{% macro diskName(disk, i) -%}{{ env["deployment"] }}-ig-{{ properties['name'] }}-{{ i }}-{{ disk["name"] }}{%- endmacro %}

{#
  Generate instance groups
#}
{% macro InstanceGroup(instance_extended_content='') %}
{% if properties['ig_type'] == 'managed' %}
{% set INSTANCE_TEMPLATE = "%s-it-%s" % (env["deployment"], properties['name']) %}
- name: {{ "%s-igm-%s" % (env["deployment"], properties['name']) }}
  type: compute.{{ API_VERSION }}.instanceGroupManager
  properties:
    baseInstanceName: {{ env["deployment"] }}-{{ properties['name'] }}
    instanceTemplate: $(ref.{{ INSTANCE_TEMPLATE }}.selfLink)
    targetSize: {{ properties['size'] }}
    zone: {{ properties["zone"] }}
- name: {{ INSTANCE_TEMPLATE }}
  type: compute.{{ API_VERSION }}.instanceTemplate
  properties:
    tags:
      items:
      - {{ env["deployment"] }}
      - {{ env["deployment"] }}-{{ properties['type'] }}
      {% for tag in properties['tags'] %}
      - {{ tag }}
      {% endfor %}
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/centos-cloud/global/images/{{ properties["image"] }}
    {% for disk in properties["disks"] %}
    - deviceName: {{ diskName(disk) }}
      type: PERSISTENT
      boot: false
      autoDelete: true
      initializeParams:
        sourceImage: projects/centos-cloud/global/images/empty-disk-image
        diskSizeGb: {{ disk["sizeGb"] }}
        diskType: {{ disk["diskType"] }}
    {% endfor %}
    machineType: {{ properties["flavor"] }}
    networkInterfaces:
    - network: projects/{{ env["project"] }}/global/networks/{{ env["deployment"] }}-net
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    {% for sa in properties["serviceAccounts"] -%}
    - {% if email in sa %}email: {{ sa.email }}{% endif %}
      scopes:
      {% for scope in sa.scopes -%}
      - https://www.googleapis.com/auth/{{ scope }}
      {% endfor %}
    {% endfor %}
    {{ instance_extended_content }}
{% else %}
- name: {{ env["deployment"] }}-ig-{{ properties['name'] }}-group
  type: compute.{{ API_VERSION }}.instanceGroup
  properties:
    zone: {{ properties["zone"] }}
    network: projects/{{ env["project"] }}/global/networks/{{ env["deployment"] }}-net
    {% if properties['type'] == 'master' %}
    namedPorts:
      - name: {{ env["deployment"] }}-port-name-master
        port: 8443
    {% endif %}
  metadata:
    dependsOn:
    - {{ env["deployment"] }}-bastion
{% for i in range(properties["size"]) %}
{% for disk in properties["disks"] %}
- name: {{ env["deployment"] }}-ig-{{ properties['name'] }}-{{ i }}-{{ disk["name"] }}
  type: compute.{{ API_VERSION }}.disk
  properties:
    zone: {{ properties["zone"] }}
    sizeGb: {{ disk["sizeGb"] }}
    type: https://www.googleapis.com/compute/{{ API_VERSION }}/projects/{{ env["project"] }}/zones/{{ properties["zone"] }}/diskTypes/{{ disk["diskType"] }}
{% endfor  %}
- name: {{ env["deployment"] }}-ig-{{ properties["name"] }}-{{ i }}
  type: compute.{{ API_VERSION }}.instance
  properties:
    tags:
      items:
      - {{ env["deployment"] }}
      - {{ env["deployment"] }}-{{ properties['type'] }}
      {% for tag in properties['tags'] -%}
      - {{ tag }}
      {% endfor %}
    zone: {{ properties["zone"] }}
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/centos-cloud/global/images/{{ properties["image"] }}
    {% for disk in properties["disks"] %}
    - deviceName: {{ diskName(disk,i) }}
      type: PERSISTENT
      boot: false
      autoDelete: true
      source: projects/{{ env["project"] }}/zones/{{ properties["zone"] }}/disks/{{ diskName(disk,i) }}
    {% endfor %}
    machineType: projects/{{ env["project"] }}/zones/{{ properties["zone"] }}/machineTypes/{{ properties["flavor"] }}
    networkInterfaces:
    - network: projects/{{ env["project"] }}/global/networks/{{ env["deployment"] }}-net
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    serviceAccounts:
    {% for sa in properties["serviceAccounts"] -%}
    - {% if email in sa %}email: {{ sa.email }}{% endif %}
      scopes:
      {% for scope in sa.scopes -%}
      - https://www.googleapis.com/auth/{{ scope }}
      {% endfor %}
    {% endfor %}
    {{ instance_extended_content }}
    metadata:
      items:
      - key: startup-script
        value: |
          echo "ADDING INSTANCE TO INSTANCE GROUP"
          gcloud compute instance-groups unmanaged add-instances {{ env["deployment"] }}-ig-{{ properties["name"] }}-group --instances {{ env["deployment"] }}-ig-{{ properties["name"] }}-{{ i }} --zone {{ properties["zone"] }}
  metadata:
    dependsOn:
    - {{ env["deployment"] }}-bastion
    {% for disk in properties["disks"] %}
    - {{ diskName(disk,i) }}
    {% endfor %}
{% endfor %}
{% endif %}
{% endmacro %}

{#
  Generate GPU content
#}
{% macro GPUExtension(gpus) %}
{% if gpus|length > 0 %}
    guestAccelerators:
{% for gpu in gpus %}
    - acceleratorType: https://www.googleapis.com/compute/{{ API_VERSION }}/projects/{{ env['project'] }}/zones/{{ properties['zone'] }}/acceleratorTypes/{{ gpu.type|default('nvidia-tesla-k80') }}
      acceleratorCount: {{  gpu.size|default('1') }}
{% endfor %}
    scheduling:
      onHostMaintenance: TERMINATE
      automaticRestart: true
      preemptible: false
{% endif %}
{% endmacro %}

resources:
{{ InstanceGroup(
     instance_extended_content=GPUExtension(properties['gpu'])
   )
}}